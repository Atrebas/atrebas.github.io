<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Home</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 08 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dendrograms in R, a lightweight approach</title>
      <link>/post/2019-06-08-lightweight-dendrograms/</link>
      <pubDate>Sat, 08 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-06-08-lightweight-dendrograms/</guid>
      <description>.hljs{background: #a7a7a71a;font-size: 90%;}Dendrograms in RDendrograms are diagrams useful to illustrate hierarchical relationships, such as those obtained from a hierarchical clustering. They are commonly used in biology, especially in genetics, for example to illustrate the relationships among a set of genes or taxa.
Several alternatives exist in R to visualize dendrograms (reviews here and here), like base R of course, or the ape package.</description>
    </item>
    
    <item>
      <title>Turning images into ridgeline plots</title>
      <link>/post/2019-05-18-images-to-ridges/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-05-18-images-to-ridges/</guid>
      <description>.hljs{background: #a7a7a71a;font-size: 90%;}What if we turn images into ridgeline plots?
Ridgeline plots“Ridgeline plots are partially overlapping line plots that create the impression of a mountain range. They can be quite useful for visualizing changes in distributions over time or space.” - Claus Wilke.
They have been quite popular recently. Some references include:
The work of James Cheshire to represent population density</description>
    </item>
    
    <item>
      <title>A data.table and dplyr tour</title>
      <link>/post/2019-03-03-datatable-dplyr/</link>
      <pubDate>Sun, 03 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-03-03-datatable-dplyr/</guid>
      <description>IntroductionAboutdata.table and dplyrCreate example dataBasic operationsFilter rowsSort rowsSelect columnsSummarise dataAdd/update/delete columnsbyGoing furtherAdvanced columns manipulationChain expressionsIndexing and Keysset*() modificationsAdvanced use of byMiscellaneousRead / Write dataReshape dataOtherJoin/Bind data setsJoinMore joinsBindSet operationsSummary-------------------------------------------------------------------------------table {width: 100%;border-top: none !</description>
    </item>
    
    <item>
      <title>Self-studying Python and Machine Learning: 2018 in review</title>
      <link>/post/2019-01-15-2018-learning/</link>
      <pubDate>Tue, 15 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/2019-01-15-2018-learning/</guid>
      <description>.figure  p {text-align: center;align: bottom;font-size: 10px;}Both for personal interest and professional development, I started to learn Python and machine learning concepts.This article summarizes my 2018 learning path.
CoursesIn January, I completed the MOOC “Python 3: from the fundamentals to advanced concepts” that I started in November 2017. This MOOC, taught in French by two INRIA researchers, provided me with a very good introduction to the Python programming language: overview of the built-in types, functions, notions of OOP, …</description>
    </item>
    
  </channel>
</rss>